{"version":3,"sources":["api.tsx","Atoms.ts","component/ToggleTheme.tsx","component/Header.tsx","component/CandleChart.tsx","component/LineChart.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","GlobalStyle.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","CHART_TYPES","isDarkAtom","atom","key","default","chartTypes","CANDLESTICK","ToggleWrapper","styled","label","ToggleInput","input","ToggleDiv","div","props","theme","black","white","isEnabled","IconsDiv","ToggleTheme","useRecoilState","isDark","setDarkAtom","htmlFor","type","id","checked","onChange","prev","HeaderSection","header","Title","h1","accentColor","BackBtn","button","textColor","Header","infoDataName","loading","navigate","useNavigate","state","useLocation","coinsMatch","useMatch","name","onClick","CandleChart","data","series","map","prop","x","time_close","substring","y","open","toFixed","high","low","close","options","mode","chart","height","width","background","toolbar","show","grid","yaxis","tooltip","enabled","xaxis","labels","axisBorder","axisTicks","categories","slice","formatter","value","LineChart","stroke","curve","fill","colors","gradient","gradientToColors","stops","ChartTypes","Chart","cType","setCtype","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","isLoading","useRecoilValue","e","currentTarget","defaultValue","obj","result","Object","keys","filter","k","Number","isNaN","push","buildSelectBox","Container","Overview","OverviewItem","Loader","span","PercentSpan","PriceList","Price","rates","quotes","USD","percent_change_1h","percent_change_6h","percent_change_12h","percent_change_24h","ath_date","toString","style","color","ath_price","toLocaleString","maximumSignificantDigits","fontSize","max","Description","p","Tabs","Tab","isActive","Coin","useParams","priceMatch","fetchCoinInfo","infoLoading","infoData","refetchInterval","tickersLoading","tickersData","rank","symbol","price","description","total_supply","max_supply","to","index","element","path","CoinsList","ul","li","boardColor","Img","img","Coins","coin","animation","src","toLowerCase","alt","Router","basename","process","GlobalStyle","createGlobalStyle","bgColor","darkTheme","lightTheme","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"uPAAMA,EAAW,iCAEV,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,WAAsBG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAOzD,SAASC,EAAiBC,GAC/B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,oBAAwBO,IAAUJ,MAAK,SAACC,GAAD,OAAcA,EAASC,U,ICJhEG,E,eALCC,EAAaC,YAAK,CAC7BC,IAAK,SACLC,SAAS,K,SAGCJ,O,eAAAA,I,8BAAAA,M,KAKL,I,QAAMK,EAAaH,YAAK,CAC7BC,IAAK,aACLC,QAASJ,EAAYM,c,OCRjBC,EAAgBC,IAAOC,MAAV,mGAMbC,EAAcF,IAAOG,MAAV,6EAKXC,EAAYJ,IAAOK,IAAV,scAGC,SAACC,GAAD,OAAWA,EAAMC,MAAMC,SAYrB,SAACF,GAAD,OAAWA,EAAMC,MAAME,SAGxB,SAACH,GAAD,OAAYA,EAAMI,UAAY,mBAAqB,mBAI9DC,EAAWX,IAAOK,IAAV,2LAOF,SAACC,GAAD,OAAWA,EAAMC,MAAME,SAuBpBG,I,MAAAA,EAlBf,WACE,MAA8BC,YAAepB,GAA7C,mBAAOqB,EAAP,KAAeC,EAAf,KAIA,OACE,cAAChB,EAAD,CAAeiB,QAAQ,SAAvB,SACE,eAACZ,EAAD,CAAWM,UAAWI,EAAtB,UACE,eAACH,EAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,OAEF,cAACT,EAAD,CAAae,KAAK,WAAWC,GAAG,SAASC,QAASL,EAAQM,SAV5C,WAClBL,GAAY,SAACM,GAAD,OAAWA,cClDrBC,EAAgBtB,IAAOuB,OAAV,0IAObC,EAAQxB,IAAOyB,GAAV,8DAEA,SAACnB,GAAD,OAAWA,EAAMC,MAAMmB,eAE5BC,EAAU3B,IAAO4B,OAAV,0OAOF,SAACtB,GAAD,OAAWA,EAAMC,MAAMsB,aA2BnBC,MAlBf,YAAyD,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,QACxBC,EAAWC,cACTC,EAAUC,cAAVD,MACFE,EAAaC,YAAS,KAI5B,OACE,eAAChB,EAAD,WACE,cAACE,EAAD,UACGa,EAAa,QAAUF,EAAQA,EAAMI,KAAOP,EAAU,aAAeD,IAEvEM,EAAa,KAAO,cAACV,EAAD,CAASa,QARd,WAClBP,EAAS,MAOc,2BACrB,cAAC,EAAD,Q,iBC2BSQ,MApEf,YAA0D,IAAnCC,EAAkC,EAAlCA,KAAM5B,EAA4B,EAA5BA,OAC3B,OACE,cAAC,IAAD,CACEG,KAAK,cACL0B,OAAQ,CACN,CACEJ,KAAM,QACNG,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAME,KAAI,SAACC,GACf,MAAO,CACLC,EAAGD,EAAKE,WAAWC,UAAU,EAAG,IAChCC,EAAG,CACDJ,EAAKK,KAAKC,QAAQ,GAClBN,EAAKO,KAAKD,QAAQ,GAClBN,EAAKQ,IAAIF,QAAQ,GACjBN,EAAKS,MAAMH,QAAQ,UAM7BI,QAAS,CACPhD,MAAO,CACLiD,KAAM1C,EAAS,OAAS,SAE1B2C,MAAO,CACLC,OAAQ,IACRC,MAAO,IACPC,WAAY,cACZC,QAAS,CACPC,MAAM,IAGVC,KAAM,CACJD,MAAM,GAMRE,MAAO,CACLC,QAAS,CACPC,SAAS,IAGbC,MAAO,CACLlD,KAAM,WACNmD,OAAQ,CAAEN,MAAM,GAChBO,WAAY,CACVP,MAAM,GAERQ,UAAW,CACTR,MAAM,GAERG,QAAS,CACPC,SAAS,GAEXK,WAAU,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAME,KAAI,SAACC,GAAD,OAAUA,EAAKE,WAAWyB,MAAM,EAAG,QAE3DP,QAAS,CACPhB,EAAG,CACDwB,UAAW,SAACC,GAAD,iBAAeA,EAAMvB,QAAQ,WCArCwB,MA5Df,YAAwD,IAAnCjC,EAAkC,EAAlCA,KAAM5B,EAA4B,EAA5BA,OACzB,OACE,cAAC,IAAD,CACEG,KAAK,OACL0B,OAAQ,CACN,CACEJ,KAAM,QACNG,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAME,KAAI,SAACC,GAAD,OAAUA,EAAKS,WAGnCC,QAAS,CACPhD,MAAO,CACLiD,KAAM1C,EAAS,OAAS,SAE1B2C,MAAO,CACLC,OAAQ,IACRC,MAAO,IACPC,WAAY,cACZC,QAAS,CACPC,MAAM,IAGVC,KAAM,CACJD,MAAM,GAERc,OAAQ,CACNC,MAAO,SACPlB,MAAO,GAETK,MAAO,CAAEI,OAAQ,CAAEN,MAAM,IACzBK,MAAO,CAELC,OAAQ,CAAEN,MAAM,GAChBO,WAAY,CACVP,MAAM,GAERQ,UAAW,CACTR,MAAM,GAERS,WAAU,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAME,KAAI,SAACC,GAAD,OAAUA,EAAKE,WAAWyB,MAAM,EAAG,QAE3DM,KAAM,CACJC,OAAQ,CAAC,WACT9D,KAAM,WACN+D,SAAU,CACR/D,KAAM,aACNgE,iBAAkB,CAAC,WACnBC,MAAO,CAAC,EAAG,OAGfjB,QAAS,CACPhB,EAAG,CACDwB,UAAW,SAACC,GAAD,iBAAeA,EAAMvB,QAAQ,WC9B9CgC,EAAa,SAAC,GAAD,IAAGzC,EAAH,EAAGA,KAAM5B,EAAT,EAASA,OAAT,MAAyC,CAC1D,EAAG,cAAC,EAAD,CAAW4B,KAAMA,EAAM5B,OAAQA,IAClC,EAAG,cAAC,EAAD,CAAa4B,KAAMA,EAAM5B,OAAQA,MAiCvBsE,I,gBAAAA,EA9Bf,YAAyC,IAAxB7F,EAAuB,EAAvBA,OACf,EAA0BsB,YAAehB,GAAzC,mBAAOwF,EAAP,KAAcC,EAAd,KACA,EAA4BC,mBAAwB,CAAC,QAAShG,IAAS,kBNlBlE,SAA0BA,GAC/B,IAAMiG,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,QAC5B,OAAOtG,MAAM,GAAD,OACPF,EADO,kBACWO,EADX,mCAC4CsG,EAD5C,gBAC6DL,IACvErG,MAAK,SAACC,GAAD,OAAcA,EAASC,UMc5ByG,CAAiBvG,MADXwG,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,KAGb5B,EAASkF,YAAevG,GAe9B,OACE,gCACE,wBAAQ2B,SALK,SAAC6E,GAChBX,GAAUW,EAAEC,cAAcxB,QAIIA,MAAOW,EAAOc,aAAcd,EAAxD,SAhBmB,WACrB,INfoEe,EMe9DC,EAAS,GACf,IAAK,IAAM1G,KNhByDyG,EMgBzC5G,ENftB8G,OAAOC,KAAKH,GAAKI,QAAO,SAACC,GAAD,OAAOC,OAAOC,OAAOF,MMgBhDJ,EAAOO,KACL,wBAAkBlC,MAAO/E,EAAzB,SACGH,EAAYG,IADFA,IAKjB,OAAO0G,EAQFQ,KAEFd,EAAY,mBAAqBZ,EAAW,CAAEzC,OAAM5B,WAAUuE,OCjD/DyB,EAAY9G,IAAOK,IAAV,oEAITyB,GAAS9B,IAAOuB,OAAV,mHAMNC,GAAQxB,IAAOyB,GAAV,8DAEA,SAACnB,GAAD,OAAWA,EAAMC,MAAMmB,eAE5BqF,GAAW/G,IAAOK,IAAV,2VAgBR2G,GAAehH,IAAOK,IAAV,iGAKZ4G,GAASjH,IAAOkH,KAAV,sEAINC,GAAcnH,IAAOkH,KAAV,2CACN,SAAC5G,GAAD,OAAYA,EAAMoE,MAAQ,EAAI,UAAY,aAE/C0C,GAAYpH,IAAOK,IAAV,0BA0EAgH,I,qBAAAA,GArEf,YAAwC,IAAvB9H,EAAsB,EAAtBA,OACf,EAA4BgG,mBAAqB,CAAC,UAAWhG,IAAS,kBACpED,EAAiBC,MADXwG,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,KAGf4E,EAAQ,QACV5E,QADU,IACVA,OADU,EACVA,EAAM6E,OAAOC,IAAIC,kBADP,OAEV/E,QAFU,IAEVA,OAFU,EAEVA,EAAM6E,OAAOC,IAAIE,kBAFP,OAGVhF,QAHU,IAGVA,OAHU,EAGVA,EAAM6E,OAAOC,IAAIG,mBAHP,OAIVjF,QAJU,IAIVA,OAJU,EAIVA,EAAM6E,OAAOC,IAAII,oBAEnB,OACE,eAACd,EAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,8CAGJ,cAAC,GAAD,UACE,cAAC,GAAD,sBAEDf,EACC,cAACkB,GAAD,yBAEA,eAACG,GAAD,WACE,eAACL,GAAD,WACE,eAACC,GAAD,WACE,uDAAmBtE,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAM6E,OAAOC,IAAIK,SAASC,WAAW9E,UAAU,EAAG,IAArE,QACA,uBAAM+E,MAAO,CAAEC,MAAO,WAAtB,qBAEGtF,QAFH,IAEGA,OAFH,EAEGA,EAAM6E,OAAOC,IAAIS,UAAUC,eAAe,QAAS,CAClDC,yBAA0B,WAIhC,eAACnB,GAAD,WACE,4CACA,eAACG,GAAD,CACEY,MAAO,CAAEK,SAAU,IACnB1D,MAAOe,KAAK4C,IAAIf,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,IAFzD,UAGG7B,KAAK4C,IAAIf,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,IAHnD,aAOJ,eAACP,GAAD,WACE,eAACC,GAAD,WACE,0DACA,eAACG,GAAD,CAAazC,MAAO4C,EAAM,GAA1B,UAAgCA,EAAM,GAAtC,UAEF,eAACN,GAAD,WACE,0DACA,eAACG,GAAD,CAAazC,MAAO4C,EAAM,GAA1B,UAAgCA,EAAM,GAAtC,aAGJ,eAACP,GAAD,WACE,eAACC,GAAD,WACE,2DACA,eAACG,GAAD,CAAazC,MAAO4C,EAAM,GAA1B,UAAgCA,EAAM,GAAtC,UAEF,eAACN,GAAD,WACE,2DACA,eAACG,GAAD,CAAazC,MAAO4C,EAAM,GAA1B,UAAgCA,EAAM,GAAtC,oBCvGRR,GAAY9G,IAAOK,IAAV,4FAKT4G,GAASjH,IAAOkH,KAAV,wEAINH,GAAW/G,IAAOK,IAAV,sUAeR2G,GAAehH,IAAOK,IAAV,mGAKZiI,GAActI,IAAOuI,EAAV,mDAGXC,GAAOxI,IAAOK,IAAV,6HAMJoI,GAAMzI,IAAOkH,KAAV,gQACE,SAAC5G,GAAD,OAAYA,EAAMoI,SAAWpI,EAAMC,MAAMmB,YAAcpB,EAAMC,MAAMsB,aAyI/D8G,I,eAAAA,GAvEf,WACE,IAAQpJ,EAAWqJ,cAAXrJ,OACA4C,EAAUC,cAAVD,MACF0G,EAAavG,YAAS,kBAC5B,EAAmDiD,mBAAoB,CAAC,OAAQhG,IAAS,kBRjHpF,SAAuBA,GAC5B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,IAAUJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UQiHtEyJ,CAAcvJ,MADGwJ,EAAnB,EAAQhD,UAA8BiD,EAAtC,EAAgCtG,KAGhC,EAAyD6C,mBACvD,CAAC,UAAWhG,IACZ,kBAAMD,EAAiBC,KACvB,CACE0J,gBAAiB,MAJFC,EAAnB,EAAQnD,UAAiCoD,EAAzC,EAAmCzG,KAO7BV,EAAU+G,GAAeG,EAC/B,OACE,eAAC,GAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,iCAAa,OAAL/G,QAAK,IAALA,OAAA,EAAAA,EAAOI,MAAOJ,EAAMI,KAAOP,EAAU,aAAH,OAAkBgH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUzG,WAG1E,cAAC,EAAD,CAAQR,aAAY,OAAEiH,QAAF,IAAEA,OAAF,EAAEA,EAAUzG,KAAMP,QAASA,IAC9CA,EACC,cAAC,GAAD,yBAEA,qCACE,eAAC,GAAD,WACE,eAAC,GAAD,WACE,yCACA,sCAAOgH,QAAP,IAAOA,OAAP,EAAOA,EAAUI,UAEnB,eAAC,GAAD,WACE,2CACA,sCAAOJ,QAAP,IAAOA,OAAP,EAAOA,EAAUK,YAEnB,eAAC,GAAD,WACE,0CACA,4CAAQF,QAAR,IAAQA,OAAR,EAAQA,EAAa5B,OAAOC,IAAI8B,eAGpC,cAAChB,GAAD,iBAAcU,QAAd,IAAcA,OAAd,EAAcA,EAAUO,cACxB,eAAC,GAAD,WACE,eAAC,GAAD,WACE,iDACA,sCAAOJ,QAAP,IAAOA,OAAP,EAAOA,EAAaK,kBAEtB,eAAC,GAAD,WACE,+CACA,sCAAOL,QAAP,IAAOA,OAAP,EAAOA,EAAaM,mBAGxB,eAACjB,GAAD,WACE,cAACC,GAAD,CAAKC,UAAUG,EAAf,SACE,cAAC,IAAD,CAAMa,GAAG,QAAT,qBAEF,cAACjB,GAAD,CAAKC,WAAUG,EAAf,SACE,cAAC,IAAD,CAAMa,GAAG,QAAT,wBAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,QAAS,cAAC,EAAD,CAAOrK,OAAQA,MACrC,cAAC,IAAD,CAAOsK,KAAK,QAAQD,QAAS,cAAC,EAAD,CAAOrK,OAAQA,MAC5C,cAAC,IAAD,CAAOsK,KAAK,QAAQD,QAAS,cAAC,GAAD,CAAOrK,OAAQA,gBC3KlDuH,GAAY9G,IAAOK,IAAV,4FAKTyJ,GAAY9J,IAAO+J,GAAV,4BACTpB,GAAO3I,IAAOgK,GAAV,oeACY,SAAC1J,GAAD,OAAWA,EAAMC,MAAM0J,cAe9B,SAAC3J,GAAD,OAAWA,EAAMC,MAAMmB,eAchCuF,GAASjH,IAAOkH,KAAV,wEAINgD,GAAMlK,IAAOmK,IAAV,qFAkDMC,OAnCf,WACE,MAA4B7E,mBAAkB,WAAYtG,GAAlD8G,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,KACnB,OACE,eAAC,GAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,8CAGJ,cAAC,EAAD,IACCqD,EACC,cAAC,GAAD,yBAEA,cAAC+D,GAAD,iBACGpH,QADH,IACGA,OADH,EACGA,EAAM8B,MAAM,EAAG,KAAK5B,KAAI,SAACyH,EAAMV,GAAP,OACvB,cAAC,GAAD,CAEE5B,MAAO,CACLuC,UAAU,YAAD,OAAcX,EAAd,mCAHb,SAKE,eAAC,IAAD,CAAMD,GAAE,WAAMW,EAAKnJ,IAAMiB,MAAO,CAAEI,KAAM8H,EAAK9H,KAAM6G,KAAMiB,EAAKjB,MAA9D,UACE,cAACc,GAAD,CACEK,IAAG,qDAAgDF,EAAKhB,OAAOmB,eAC/DC,IAAKJ,EAAK9H,OAEX8H,EAAK9H,KALR,cAJK8H,EAAKnJ,aC/DTwJ,I,GAAAA,GAXf,WACE,OACE,cAAC,IAAD,CAAeC,SAAUC,uBAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOf,KAAK,aAAaD,QAAS,cAAC,GAAD,MAClC,cAAC,IAAD,CAAOC,KAAK,IAAID,QAAS,cAAC,GAAD,YC0DlBiB,GAjEKC,YAAH,mlDAiCO,SAACxK,GAAD,OAAWA,EAAMC,MAAMwK,WAElC,SAACzK,GAAD,OAAWA,EAAMC,MAAMsB,a,SCnCvBmJ,GAA0B,CACrCD,QAAS,UACTlJ,UAAW,UACXH,YAAa,UACbuI,WAAY,UACZzJ,MAAO,UACPC,MAAO,WAGIwK,GAA2B,CACtCF,QAAS,UACTlJ,UAAW,UACXH,YAAa,UACbuI,WAAY,UACZzJ,MAAO,UACPC,MAAO,W,MCKMyK,OAbf,WACE,IAAMpK,EAASkF,YAAevG,GAC9B,OACE,mCACE,eAAC,IAAD,CAAec,MAAOO,EAASkK,GAAYC,GAA3C,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,sBAAD,CAAoBE,eAAe,UCVrCC,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,GAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.9457a8f5.chunk.js","sourcesContent":["const BASE_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: any) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: any) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n\r\nexport function enumKeys<O extends object, K extends keyof O = keyof O>(obj: O): K[] {\r\n  return Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[];\r\n}\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: true,\r\n});\r\n\r\nexport enum CHART_TYPES {\r\n  LINE,\r\n  CANDLESTICK,\r\n}\r\n\r\nexport const chartTypes = atom({\r\n  key: \"chartTypes\",\r\n  default: CHART_TYPES.CANDLESTICK,\r\n});\r\n","import { FaSun } from \"react-icons/fa\";\r\nimport { FaMoon } from \"react-icons/fa\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { isDarkAtom } from \"../Atoms\";\r\n\r\nconst ToggleWrapper = styled.label`\r\n  width: 130px;\r\n  display: block;\r\n  position: absolute;\r\n  left: 0;\r\n`;\r\nconst ToggleInput = styled.input`\r\n  position: relative;\r\n  top: 0;\r\n  opacity: 0;\r\n`;\r\nconst ToggleDiv = styled.div<{ isEnabled: boolean }>`\r\n  height: 32px;\r\n  width: 65px;\r\n  background: ${(props) => props.theme.black};\r\n  transition: background-color 1s ease-out;\r\n  border-radius: 20px;\r\n  padding: 6px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  ::before {\r\n    content: \"\";\r\n    display: block;\r\n    height: 20px;\r\n    width: 20px;\r\n    border-radius: 15px;\r\n    background: ${(props) => props.theme.white};\r\n    position: absolute;\r\n    z-index: 2;\r\n    transform: ${(props) => (props.isEnabled ? \"translateX(32px)\" : \"translateX(4)\")};\r\n    transition: transform 0.5s ease;\r\n  }\r\n`;\r\nconst IconsDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 100%;\r\n  margin: 0 2px;\r\n  svg {\r\n    fill: ${(props) => props.theme.white};\r\n    z-index: 0;\r\n  }\r\n`;\r\n\r\nfunction ToggleTheme() {\r\n  const [isDark, setDarkAtom] = useRecoilState(isDarkAtom);\r\n  const toggleState = () => {\r\n    setDarkAtom((prev) => !prev);\r\n  };\r\n  return (\r\n    <ToggleWrapper htmlFor=\"toggle\">\r\n      <ToggleDiv isEnabled={isDark}>\r\n        <IconsDiv>\r\n          <FaMoon />\r\n          <FaSun />\r\n        </IconsDiv>\r\n        <ToggleInput type=\"checkbox\" id=\"toggle\" checked={isDark} onChange={toggleState} />\r\n      </ToggleDiv>\r\n    </ToggleWrapper>\r\n  );\r\n}\r\n\r\nexport default ToggleTheme;\r\n","import styled from \"styled-components\";\r\nimport { useMatch, useLocation, useNavigate } from \"react-router\";\r\nimport ToggleTheme from \"./ToggleTheme\";\r\n\r\nconst HeaderSection = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 2em;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\nconst BackBtn = styled.button`\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 20px;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  padding: 7px;\r\n  border-radius: 10px;\r\n  color: ${(props) => props.theme.textColor};\r\n  font-family: \"Source Sans Pro\";\r\n  font-weight: 300;\r\n`;\r\ninterface HeaderProps {\r\n  infoDataName?: string;\r\n  loading?: boolean;\r\n}\r\n\r\nfunction Header({ infoDataName, loading }: HeaderProps) {\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n  const coinsMatch = useMatch(\"/\");\r\n  const backClickEH = () => {\r\n    navigate(\"/\");\r\n  };\r\n  return (\r\n    <HeaderSection>\r\n      <Title>\r\n        {coinsMatch ? \"Coins\" : state ? state.name : loading ? \"loading...\" : infoDataName}\r\n      </Title>\r\n      {coinsMatch ? null : <BackBtn onClick={backClickEH}>Back to Coins</BackBtn>}\r\n      <ToggleTheme />\r\n    </HeaderSection>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import ApexChart from \"react-apexcharts\";\r\nimport { IChartTypesProps } from \"../routes/Chart\";\r\n\r\nfunction CandleChart({ data, isDark }: IChartTypesProps) {\r\n  return (\r\n    <ApexChart\r\n      type=\"candlestick\"\r\n      series={[\r\n        {\r\n          name: \"Price\",\r\n          data: data?.map((prop) => {\r\n            return {\r\n              x: prop.time_close.substring(0, 10),\r\n              y: [\r\n                prop.open.toFixed(3),\r\n                prop.high.toFixed(3),\r\n                prop.low.toFixed(3),\r\n                prop.close.toFixed(3),\r\n              ],\r\n            };\r\n          }),\r\n        },\r\n      ]}\r\n      options={{\r\n        theme: {\r\n          mode: isDark ? \"dark\" : \"light\",\r\n        },\r\n        chart: {\r\n          height: 300,\r\n          width: 500,\r\n          background: \"transparent\",\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n        },\r\n        grid: {\r\n          show: false,\r\n        },\r\n        /*    stroke: {\r\n          curve: \"smooth\",\r\n          width: 3,\r\n        }, */\r\n        yaxis: {\r\n          tooltip: {\r\n            enabled: false,\r\n          },\r\n        },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n          labels: { show: true },\r\n          axisBorder: {\r\n            show: false,\r\n          },\r\n          axisTicks: {\r\n            show: false,\r\n          },\r\n          tooltip: {\r\n            enabled: true,\r\n          },\r\n          categories: data?.map((prop) => prop.time_close.slice(0, 10)),\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: (value) => `$${value.toFixed(0)}`,\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CandleChart;\r\n","import ApexChart from \"react-apexcharts\";\r\nimport { IChartTypesProps } from \"../routes/Chart\";\r\n\r\nfunction LineChart({ data, isDark }: IChartTypesProps) {\r\n  return (\r\n    <ApexChart\r\n      type=\"line\"\r\n      series={[\r\n        {\r\n          name: \"Price\",\r\n          data: data?.map((prop) => prop.close),\r\n        },\r\n      ]}\r\n      options={{\r\n        theme: {\r\n          mode: isDark ? \"dark\" : \"light\",\r\n        },\r\n        chart: {\r\n          height: 300,\r\n          width: 500,\r\n          background: \"transparent\",\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n        },\r\n        grid: {\r\n          show: false,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n          width: 3,\r\n        },\r\n        yaxis: { labels: { show: false } },\r\n        xaxis: {\r\n          /* type: \"datetime\", */\r\n          labels: { show: false },\r\n          axisBorder: {\r\n            show: false,\r\n          },\r\n          axisTicks: {\r\n            show: false,\r\n          },\r\n          categories: data?.map((prop) => prop.time_close.slice(0, 10)),\r\n        },\r\n        fill: {\r\n          colors: [\"#0fbcf9\"],\r\n          type: \"gradient\",\r\n          gradient: {\r\n            type: \"Horizontal\",\r\n            gradientToColors: [\"#0be881\"],\r\n            stops: [0, 100],\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: (value) => `$${value.toFixed(3)}`,\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n","import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { enumKeys, fetchCoinHistory } from \"../api\";\r\nimport { chartTypes, CHART_TYPES, isDarkAtom } from \"../Atoms\";\r\nimport CandleChart from \"../component/CandleChart\";\r\nimport LineChart from \"../component/LineChart\";\r\ninterface IChartProps {\r\n  coinId: string;\r\n}\r\nexport interface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\nexport interface IChartTypesProps {\r\n  data?: IHistorical[];\r\n  isDark?: boolean;\r\n}\r\n\r\nconst ChartTypes = ({ data, isDark }: IChartTypesProps) => ({\r\n  0: <LineChart data={data} isDark={isDark} />,\r\n  1: <CandleChart data={data} isDark={isDark} />,\r\n});\r\n\r\nfunction Chart({ coinId }: IChartProps) {\r\n  const [cType, setCtype] = useRecoilState(chartTypes);\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n    fetchCoinHistory(coinId)\r\n  );\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const buildSelectBox = () => {\r\n    const result = [];\r\n    for (const key in enumKeys(CHART_TYPES)) {\r\n      result.push(\r\n        <option key={key} value={key}>\r\n          {CHART_TYPES[key]}\r\n        </option>\r\n      );\r\n    }\r\n    return result;\r\n  };\r\n  const selectEH = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setCtype(+e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <select onChange={selectEH} value={cType} defaultValue={cType}>\r\n        {buildSelectBox()}\r\n      </select>\r\n      {isLoading ? \"Loading chart...\" : ChartTypes({ data, isDark })[cType]}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinTickers } from \"../api\";\r\nimport { IPriceData } from \"./Coin\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 2em;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  border-radius: 15px;\r\n  padding: 15px 20px;\r\n  margin-bottom: 10px;\r\n\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst PercentSpan = styled.span<{ value: number }>`\r\n  color: ${(props) => (props.value > 0 ? \"#3498db\" : \"#e74c3c\")};\r\n`;\r\nconst PriceList = styled.div``;\r\ninterface PriceProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Price({ coinId }: PriceProps) {\r\n  const { isLoading, data } = useQuery<IPriceData>([\"tickers\", coinId], () =>\r\n    fetchCoinTickers(coinId)\r\n  );\r\n  let rates = [\r\n    data?.quotes.USD.percent_change_1h,\r\n    data?.quotes.USD.percent_change_6h,\r\n    data?.quotes.USD.percent_change_12h,\r\n    data?.quotes.USD.percent_change_24h,\r\n  ];\r\n  return (\r\n    <Container>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title>Price</title>\r\n        </Helmet>\r\n      </HelmetProvider>\r\n      <Header>\r\n        <Title>Price</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <PriceList>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>ATH Price ( {data?.quotes.USD.ath_date.toString().substring(0, 10)} )</span>\r\n              <span style={{ color: \"#3498db\" }}>\r\n                $\r\n                {data?.quotes.USD.ath_price.toLocaleString(\"ko-kr\", {\r\n                  maximumSignificantDigits: 11,\r\n                })}\r\n              </span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max rate</span>\r\n              <PercentSpan\r\n                style={{ fontSize: 26 }}\r\n                value={Math.max(rates[0]!, rates[1]!, rates[2]!, rates[3]!)}>\r\n                {Math.max(rates[0]!, rates[1]!, rates[2]!, rates[3]!)}%\r\n              </PercentSpan>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>1 hours percent change</span>\r\n              <PercentSpan value={rates[0]!}>{rates[0]}%</PercentSpan>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>6 hours percent change</span>\r\n              <PercentSpan value={rates[1]!}>{rates[1]}%</PercentSpan>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>12 hours percent change</span>\r\n              <PercentSpan value={rates[2]!}>{rates[2]}%</PercentSpan>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>24 hours percent change</span>\r\n              <PercentSpan value={rates[3]!}>{rates[3]}%</PercentSpan>\r\n            </OverviewItem>\r\n          </Overview>\r\n        </PriceList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Route, Routes, useLocation, useMatch, useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Header from \"../component/Header\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  border-radius: 15px;\r\n  padding: 15px 20px;\r\n\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 5px;\r\n`;\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  color: ${(props) => (props.isActive ? props.theme.accentColor : props.theme.textColor)};\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  padding: 7px 0;\r\n  border-radius: 10px;\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\ninterface IInfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\nexport interface IPriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: Date;\r\n  last_updated: Date;\r\n  quotes: {\r\n    USD: {\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_15m: number;\r\n      percent_change_30m: number;\r\n      percent_change_1h: number;\r\n      percent_change_6h: number;\r\n      percent_change_12h: number;\r\n      percent_change_24h: number;\r\n      percent_change_7d: number;\r\n      percent_change_30d: number;\r\n      percent_change_1y: number;\r\n      ath_price: number;\r\n      ath_date: Date;\r\n      percent_from_price_ath: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams();\r\n  const { state } = useLocation();\r\n  const priceMatch = useMatch(\"/:coinId/price\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfoData>([\"info\", coinId], () =>\r\n    fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<IPriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title>{state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}</title>\r\n        </Helmet>\r\n      </HelmetProvider>\r\n      <Header infoDataName={infoData?.name} loading={loading} />\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>symbol:</span>\r\n              <span>{infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>total supply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>max supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={priceMatch ? false : true}>\r\n              <Link to=\"chart\">chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch ? true : false}>\r\n              <Link to=\"price\">price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          <Routes>\r\n            <Route index element={<Chart coinId={coinId as string} />} />\r\n            <Route path=\"chart\" element={<Chart coinId={coinId as string} />} />\r\n            <Route path=\"price\" element={<Price coinId={coinId as string} />} />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport Header from \"../component/Header\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst CoinsList = styled.ul``;\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.boardColor};\r\n  color: black;\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  ::before {\r\n    opacity: 0;\r\n  }\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n  @keyframes Fadein {\r\n    from {\r\n      opacity: 0;\r\n      margin-bottom: 100vh;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 1em;\r\n`;\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  return (\r\n    <Container>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title>COINS</title>\r\n        </Helmet>\r\n      </HelmetProvider>\r\n      <Header />\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin, index) => (\r\n            <Coin\r\n              key={coin.id}\r\n              style={{\r\n                animation: `2s ease .${index}s 1 normal none running Fadein`,\r\n              }}>\r\n              <Link to={`/${coin.id}`} state={{ name: coin.name, rank: coin.rank }}>\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                  alt={coin.name}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route path=\"/:coinId/*\" element={<Coin />} />\r\n        <Route path=\"/\" element={<Coins />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`    \r\n  html, body, div, span, applet, object, iframe,\r\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n  a, abbr, acronym, address, big, cite, code,\r\n  del, dfn, em, img, ins, kbd, q, s, samp,\r\n  small, strike, strong, sub, sup, tt, var,\r\n  b, u, i, center,\r\n  dl, dt, dd, menu, ol, ul, li,\r\n  fieldset, form, label, legend,\r\n  table, caption, tbody, tfoot, thead, tr, th, td,\r\n  article, aside, canvas, details, embed,\r\n  figure, figcaption, footer, header, hgroup,\r\n  main, menu, nav, output, ruby, section, summary,\r\n  time, mark, audio, video {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font: inherit;\r\n    vertical-align: baseline;\r\n  }\r\n  /* HTML5 display-role reset for older browsers */\r\n  article, aside, details, figcaption, figure,\r\n  footer, header, hgroup, main, menu, nav, section {\r\n    display: block;\r\n  }\r\n  /* HTML5 hidden-attribute fix for newer browsers */\r\n  *[hidden] {\r\n      display: none;\r\n  }\r\n  body {\r\n    line-height: 1;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    background-color: ${(props) => props.theme.bgColor};\r\n    transition: background-color .5s ease-out;\r\n    color: ${(props) => props.theme.textColor};\r\n  }  \r\n  menu, ol, ul {\r\n    list-style: none;\r\n  }\r\n  blockquote, q {\r\n    quotes: none;\r\n  }\r\n  blockquote:before, blockquote:after,\r\n  q:before, q:after {\r\n    content: '';\r\n    content: none;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n  }  \r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  button {\r\n    border-style: none;\r\n    cursor: pointer;\r\n  }\r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2c3e50\",\r\n  textColor: \"#ecf0f1\",\r\n  accentColor: \"#9b59b6\",\r\n  boardColor: \"#ffffff\",\r\n  black: \"#bdc3c7\",\r\n  white: \"#2c3e50\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"#ecf0f1\",\r\n  textColor: \"#2c3e50\",\r\n  accentColor: \"#8e44ad\",\r\n  boardColor: \"#bdc3c7\",\r\n  black: \"#2c3e50\",\r\n  white: \"#bdc3c7\",\r\n};\r\n","import Router from \"./Router\";\r\nimport GlobalStyle from \"./GlobalStyle\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"./Atoms\";\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n        <GlobalStyle />\r\n        <Router />\r\n        <ReactQueryDevtools initialIsOpen={true} />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport App from \"./App\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}